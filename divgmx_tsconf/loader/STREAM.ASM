;---------------------------------------E_ENF   EQU 1; entry not foundE_NES   EQU 2; not enough spaceE_DNF   EQU 8; device not foundE_DNR   EQU 9; device not readyE_PNF   EQU 10;partition not foundE_WRP   EQU 16;write protectionE_WGS   EQU 24;wrong streamE_SNR   EQU 25;stream not ready;----------------------------------------;NEW==============================================================N1 FAT_DRV          EXX                     ;SAVE REG	        LD HL,FUX,B,0,C,A       ;HL<-Function Table; C<-Function Number        ADD HL,BC               ;HL+BC	ADD HL,BC		;HL+BC        LD A,(HL):INC HL	;GET Function Address        LD H,(HL),L,A		;HL- Function Address        LD BC,RORO:PUSH BC        PUSH HL                 ;Function Address in STACK	EXX			;RESTORE REGRORO    RET;OLD==Source code is 2Bytes more longer then new ver =============N2;FAT_DRV   ;	exx	;---- HL = FUX + A  ---;       LD HL,FUX;	sla a      ;A x 2;	add a,l    ;	ld l,a;	jr nc,f00;	inc h;f00     ;---- GO TO (FUX + A)--;	LD A,(HL):INC HL;        LD H,(HL),L,A;        LD BC,RORO:PUSH BC;        PUSH HL;	exx;RORO    RETFUX     	DW STREAM;  0;  CRTSTREAM	DW FENTRY;  1;  FENTRY	DW GDIR;    2;  SETDIR 	DW LOAD512; 3;  READ512;================================================================================;===================STEARM======================================STREAM  ;i: B - Device -NOT USED;               (0 - SD);           C - Partition;        o: C - Stream Number        PUSH BC	;------STRMCLR - очищаем обасть памяти от VALS до STRMED	LD HL,VALS,DE,HL:INC DE        LD (HL),0,BC,STRMED-VALS-1:LDIR        POP BC ;=======SD Card=================================================	        CALL  SD__OFF       	; JP SD__OFF        ;XOR A                  ; A=0: select SD   	;инициализируем SD		CALL SEL_DEV:JR NZ,EDNF ;IDE_INI+3 => N1: SELsd SD_INIT	;читаем MBR, FAT32         CALL HDD:JR NZ,EPNF     ;SEARCH PARTITION (TSFAT.ASM) 				;HDD return 0xO-OK        LD HL,0,(CRRR),HL,(CRRR+2),HL ; Clear (CRRR), (CRRR+2)        ;LD A,1,(STST),A;Stream Ready        XOR A:LD C,A        RET;=======Error============================	EWGS    LD A,E_WGS:OR A:RETEDNF    LD A,E_DNF:OR A:RETEPNF    LD A,E_PNF:OR A:RET;-------очищаем обасть памяти от VALS до STRMED;STRMCLR LD HL,VALS,DE,HL:INC DE;        LD (HL),0,BC,STRMED-VALS-1:LDIR;        ;XOR A;        RET;===================================FENTRY========;i:	LSTCAT(4) - Active DIR;       HL - Buffer with NameFENTRY  	CALL SRHDRN ; TSFAT.ASM	JR Z,EENF   ; IF OK, HL/DE- Cluster number        LD (CRRR),HL                 LD (CRRR+2),DE        EXX        CALL GFILE              LD HL,(ENTRY+28)        LD DE,(ENTRY+30)        XOR A           ; OK A=0        RET             ;=========> EXITEENF    LD A,E_ENF:OR A ; ERROR	RET;=======================================================;GIPAG=>;i:HL(4)-Cluster number //CALL XSPOZ//CALL XPOZIGFILE   LD HL,CRRR:JP GIPAG GDIR    LD HL,CRRR:JP GLSTCAT;== IDE_INI =======;IDE_INI JP INIsd;SEL_DEV JP SELsd;RDDSE   JP RDDSEsd;--------------------------------------------------------